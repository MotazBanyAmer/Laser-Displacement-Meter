Review:
    ☐ where we stopped?! @critical 

Project:
    Readmap:
        ☐ Timer
        ☐ Logger
        ☐ Timeout
        ☐ EEPROM

    Todo: 
        ☐ add check laser at the start of the code

Important:
    - make sure to connect a power source to the system, in order to get the SIM to work
Log:
    - moved "laser def" and "laser func" to "B707C" .h and .cpp
    - moved Serial tweeks from "common.h" to "app config"
    - moved "checkRespText" from "common.h" to "app common"
    - moved "doneLaser" and "errorLaser" from "GPRS_def" to "B707C"
    - Compiled successfully
    - working on cleaning the unsued variables, checked on the old code and the new one
    - Removed unused variables, Compiled successfully
    - will try build minimum working laser/B707C code in main
    - moved "initProject" from "old main code" to "app common"
    - commented "Timer Setup" in te appCommon in "InitProject", to be worked on later
    - compiled! note commented items in init projects(buzzer and timer)
    - did commit and push
    - testing!
    - found missing member function of "waitResp_Dist"
    - after fixing the missing function, the laser worked!
    - commit and push
    - need to work on improving the way the library is built.
    - got rid of the defines for laser data modes and commands, and used class enums
    - used enum class instead of defines in laser funciton for modes and controls
    - used static casting
    - compiler successfully, commit and push
    - NEW section, Timers
    - moved melodies
    - moved timer config 
    - created timeout files
    - created central files
    - created commit checkpoint1
    - alot of errors, working on solving them
    - trasnfered melodies into OO
    - working on isses in device melodies
    - almost solved copilation errors
    - added output path Arduino JSON, to save compilation time
    - compiled successfully! converted some variable to structs and put some variables as inline
    - now to use the timer in the main code
    - created errors and logger files
    - moved central errors from laser files to errors file. this shoud be inherited later
    - compiled successfully
    - commit and push
    - worked though and solved issues and compiled
    - uploaded the code for testing, testing the logger, it works and I have made updates and upgrades
    - added indentation for logging
    - added common counter and ref number
    - currently Im having issues with main code. the laser is enabled twice I dont know why
    - the problem is in the code but I cant find it!!!!
    - problem sovlved by moving the fag clear to the end of the statment, dont know why but it worked
    ☐ - stopped here, next is to improve the laser class, and maybe the logger class, and maybe to add indentation to the printed data associated with the current loging stack
    - worked on the logging system 
    - having issue, the system keeps restarting , still dont know where
    - issue solved, it was due not adding return keyword
    - now the system works, with leveling of log works as well
    ☐ - next move add a branch to the commit
    ☐ - a lot of notes as paper, check and add them
    - improved logging,
    - added paramter logging functions
    - fixed issue in logging (nested logging arrow indentation)
    - place holders for the data updates and request
    - added the base for the error handler, tested on Visual Studio on CPP
    - now working on GPRS, moving things from old code
    - 
Ideas:
    ✔ Think of what you can make of laser/B707C constructor. @done (5/8/2021, 8:22:04 AM)
    ☐ add logging level
    ☐ load HTTP need to be converted to build message and load into device function
    ☐ add background process to logger, that is not connected to direct object, but depends on the its level
    ☐ add restart and error handler functilaluity

Where to continue:
    - move functions from GPRS_Fun.h to SIM808_GPRS and create a class for the main functions
    - arrange the SIM header defines
    - remember that there is an issue with the system halted at some point when there is no external charger, fix this.
      the point was around send post funciton, it hold at getting resp loop
    - next to work on converting the wait response from void to string, 
      this affects the all the functions inside, like load parameter functions,
      where it is a void, but it should be converted to string as well and retrun the results nad other metas
    later:
        - check whether to add the wait functions each to its class, or to create a global one
            - affected classes:
                -  GPRS
                - Laser
        - maybe to inhernet from hte wainting class to the wanted class, to use a generaic waitng function,        
                        